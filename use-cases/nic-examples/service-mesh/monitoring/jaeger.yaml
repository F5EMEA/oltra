---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: jaeger
    app.kubernetes.io/component: service-account
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: jaeger
  name: jaeger
  namespace: monitoring
---
apiVersion: v1
data:
  ui: '{"dependencies":{"menuEnabled":true},"menu":[{"items":[{"label":"Documentation","url":"https://www.jaegertracing.io/docs/latest"}],"label":"About
    Jaeger"}],"tracking":{"gaID":"UA-000000-2"}}'
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: jaeger
    app.kubernetes.io/component: ui-configuration
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-ui-configuration
    app.kubernetes.io/part-of: jaeger
  name: jaeger-ui-configuration
  namespace: monitoring
---
apiVersion: v1
data:
  sampling: '{"default_strategy":{"param":1,"type":"probabilistic"}}'
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: jaeger
    app.kubernetes.io/component: sampling-configuration
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-sampling-configuration
    app.kubernetes.io/part-of: jaeger
  name: jaeger-sampling-configuration
  namespace: monitoring
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: jaeger-secret
  namespace: monitoring
data:
  tls.key: >-
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQzFtSzFTeERxLy9pdWcKVWhxUEhlV3UzZytjd0JIbDBNU21mYjUrMDh5Q0MvQ2REazhCMk9XdEFISmtPMkxTMUV6Znhmd2NqaGRHMzRvKwpJdlNFd1hBKzRjYWc2VWp4SXVpcEtKWll2eDdtSHNKREhsUTAvcDM4TXdTWjM4NjNYMHc3MWNWTGhwOU5jTHhwCkhQM0NMTXN2ZjZlOWFqZWRyYTczeFUwVlU0c1dzUjhKc3JUdDZwV3h2Y2VVYi93SnRYNzhZS1dES2NKbzduVm8KM2lZVnBjNU9DVUM2SWkvMEZROERMQnhWcDh3dW5NN1hGSFJYYnR3d2YxOUNnZVFITCtHejFHTmQzdzJwR2NiQgpMUWx6ODlieS83c2JKTThGaE1jZFpnY3gybG1UeVNTck9qYXZFWloxSHY3WGV4dU1paDFLSUtxdUEwNklLckpPCkRFbmFhQklOQWdNQkFBRUNnZ0VBVFhQQStQd1kwcXBsa1F0enFIYm43NTFtcTBTQVhiU2RLeVdXaWlGcnFFdlAKWkMwbUpYT05BaXllbllGMnROVTN0SG1NL2VEY3JLM0xHSlZ3Rk84c0lLWExRZlk5MWhzOWdHaC9OM3JNZ3ZtNwpnVVQrUlZ3VHBlMWNtUVNMOWtuL0NjWXpUL01ySHF4bXI2NWR6T091QmFROHR0MEd1NG5JaG9Ud1M1aEdTbmFvCjVXKzNod2FOMHAzUGttak5RRXExRGN2MVh2WjVPQXdjRitQOE9INU4yUzRNTFduVGd3ZlArNG1MQ3p5cko4L24KQVhVVWVBai9Tb251U1pHbG80cmpqN2h6QVlQbGNyenlVU3ZVQ0JZckxIQ3ZLdjB6UVN2V2gzR3RtQ1ZFTXYrbgpaZSsyZDBCR1NHcXFKakppYlNFS0g2SjRTdGdNdU5EN3dwRjRlNnVJQVFLQmdRRGdSYW5CcDF5dnB6Y2djY3FGCnRZZDRkWE1ESVZOWlEwSXpVeThOMkJxR1ZTL2hFZzgxaW51YjdsL2ZodlVBVHRxNEloaWx5elJvcDVjRzNyb3cKeW52YmowT1ZHUU1CVklwTDhITldDajcxQkJtTjZ2Y1FjeGtVMzBFR1VoU1VMV0hqcXN3Q2htM2FSZk90d3FtdgpDQVJxaEZrZWZCVlBidWFRdG9IZi9WalNiUUtCZ1FEUFNYT0NyR28rNTdDd1hYbzhxQktTK21QY1Q0NzQ2ZFpHCnZMdyt6OWFMQkhhUEI0K3NNTWt4WnVyek03eiswKzhXRzczcCtnSDNyY0FkQXFCdmZWSTRBOGNsWGdBdDA1WUgKRVlMK3NuRW5FeUcxOGwrVlEzSVN4OUJuekxKUXJsRlRIdjNYeHRaMW50SllabmlMSmZsbFpSaW9EOGlQYmZ4SgpSVnZjTUVGNklRS0JnRWdDdGo0aThlVElxUysydWROeTlSdWRncDluck82RlpSVTd5V2tGa1lhK2haQWNEMXdlCnFnL29XMHBYZUFWd1RGUkJSbTY5cjRkSEFIeEpPYmwrMm9RbUhRb2JyTlpaZ2NwZVczb3Q4Z2NVR094em5IN2cKcGhZSWxVVmxSNHhJZ2h6cTgzU0FHM2V4YkV2SHJGb3lGZERweS8rNDBkTGVoaFBETmpKb2s0T0ZBb0dBZCsvbwpCaFA4NWFqcGN5S2pON1dJQ2NNWFJNSkQxNEoxbVRoYk0zek9obUZ1dUJPSDdmbk1iK2s4eUx1Ry8ydGhTMG1CCitYL080NkNGS0VQODBJV1NyUmFDZy94LzNnUXZLcWZYUThlNzhRQUE0V1g4S0VGK0g1KzkxbEY2VzNTQldiYjAKNllVRFVjc3pxaktnVE9NTUNyOFVKU244d2dEQm1TT29veDdJeEFFQ2dZRUFrQ0VTSjBFWmoyRXJETno5blE0eAp2ZzBrdytkaCtrclVLdytLelpsWkpMdktxeXIwWVJBSC9xcGVVcDBuZnJKRjZCSmhXT2FKbHZmUFY1d25QVCtvCncrN1hkaUtDQTRFZG1LQzRGek9nSlhKNGtRa1FSY2lYb0lGVkRFWVEzSXZkeXNlN2R3aUZ0cWVGOUduR3hSaFcKdXN0cTVYMUFpZDUyM1FQcGNaOG9rSDQ9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  tls.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZQVENDQXlXZ0F3SUJBZ0lDRUNzd0RRWUpLb1pJaHZjTkFRRUxCUUF3ZWpFTE1Ba0dBMVVFQmhNQ1IwSXgKRlRBVEJnTlZCQWdNREVKbFpHWnZjbVJ6YUdseVpURU9NQXdHQTFVRUJ3d0ZVMkZ1WkhreEVqQVFCZ05WQkFvTQpDVTVIU1U1WUlFbHVZekVRTUE0R0ExVUVDd3dIVTBFdFJVMUZRVEVlTUJ3R0ExVUVBd3dWYldGeWF5NWliMlJrCmFXNW5kRzl1TG01bmFXNTRNQjRYRFRJeU1EZ3dOREUxTVRZMU1Gb1hEVEkwTURnd016RTFNVFkxTUZvd2FERUwKTUFrR0ExVUVCaE1DUjBJeEZUQVRCZ05WQkFnTURFSmxaR1p2Y21SemFHbHlaVEVTTUJBR0ExVUVDZ3dKVGtkSgpUbGdnU1c1ak1SQXdEZ1lEVlFRTERBZFRRUzFGVFVWQk1Sd3dHZ1lEVlFRRERCTnRiMjVwZEc5eWN5NXVaMmx1CmVDNWtaVzF2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0Wml0VXNRNnYvNHIKb0ZJYWp4M2xydDRQbk1BUjVkREVwbjIrZnRQTWdndnduUTVQQWRqbHJRQnlaRHRpMHRSTTM4WDhISTRYUnQrSwpQaUwwaE1Gd1B1SEdvT2xJOFNMb3FTaVdXTDhlNWg3Q1F4NVVOUDZkL0RNRW1kL090MTlNTzlYRlM0YWZUWEM4CmFSejl3aXpMTDMrbnZXbzNuYTJ1OThWTkZWT0xGckVmQ2JLMDdlcVZzYjNIbEcvOENiVisvR0NsZ3luQ2FPNTEKYU40bUZhWE9UZ2xBdWlJdjlCVVBBeXdjVmFmTUxwek8xeFIwVjI3Y01IOWZRb0hrQnkvaHM5UmpYZDhOcVJuRwp3UzBKYy9QVzh2KzdHeVRQQllUSEhXWUhNZHBaazhra3F6bzJyeEdXZFI3KzEzc2JqSW9kU2lDcXJnTk9pQ3F5ClRneEoybWdTRFFJREFRQUJvNEhlTUlIYk1Ba0dBMVVkRXdRQ01BQXdDd1lEVlIwUEJBUURBZ1hnTURFR0ExVWQKSlFRcU1DZ0dDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBZ1lJS3dZQkJRVUhBd01HQ0NzR0FRVUZCd01FTUlHTgpCZ05WSFJFRWdZVXdnWUtDRTIxdmJtbDBiM0p6TG01bmFXNTRMbVJsYlcrQ0QzQnliMjB1Ym1kcGJuZ3VaR1Z0CmI0SVNaM0poWm1GdVlTNXVaMmx1ZUM1a1pXMXZnaEY2YVhCcmFXNHVibWRwYm5ndVpHVnRiNElSYW1GbFoyVnkKTG01bmFXNTRMbVJsYlcrQ0QyUmhjMmd1Ym1kcGJuZ3VaR1Z0YjRJUGEzVmlaUzV1WjJsdWVDNWtaVzF2TUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQjkxQzJPRVJxNGFkbUxOMUdKenExR3JRWTlyVmJwTml5dnVuN1NiYWt5CnIzLzRNeFhXc250dWZsTlE2SlFnRysyMjgvdzRla3JGT2xoOHExazc1YTc2TnFVcFliRXBKdmlnUitUTm1FanAKUUc4OFg3OVYydGU3ODVhMmkrZzZLZ21jeXdsNWZIbUJrSEFBYkIzRWJQVkROelZrdXRNQ2RBWmVwVjEyUW42QQpoWHFHWUFVMWdkcmw0cnkyQjB0Tkw5UUNpZkIvQUdYeDAwcm42eHhpakh4T3VQcHQzN3czbWZzbnZEc0JlWVJjCnpTVVlzUmMrOGFoejIyWWFrQlZ3TFJaZS9jdCtPamphZmE3MzlwRFhlcjg1RXFxK2ZlUWpsUFI3cGo3Vm1tV2gKWGdlK24zbVBOdkFtWVhiWDVGSm1sYjVyZHBkSDNyVFhObmlJc3krcUJlUS9DSjd0a09NYWtGemZyNm14Z2FhKwpZZWg4QnJQc2JHdmVNUnJzY2xuV0xCbElRa25Odmc2T2RZQUhBWEJ1eDBIZVNSZTFrSmsvNWZQeExlbjl5MVRSCjRVbFlWTERkVFhhY3NpR2VmYWp3N1liNUJjNmF6ZTZhaG5nbVI2QWZqVDg2NnRzK1JOQXU3aWlyUXZpTmRsR3cKMnZ3T04zeWFkcDJqRUR5RThPRjVXOGZDZjE4OVFodGM0c3VUNkQzZC81ZTM1dEJjV3Z2UUJOMjNOMUNZaTJBdAphUUZvM1ozRWNERFV0M2tsYjJ0Ym9HNXNpZkY5SnpMaUl2UjNWV2ZKeWZEeHBZNVJQa2xqbHA0MkNWbE5aRlkyClc3V0FuenlqZUlyS1hYTEQvUzIyZmhqSWZlQlVDbHViUU9KUUFaZ2VSdE9HakkzdkxtTnRLbFZOVGVQaGpKdHoKOXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZ5akNDQTdLZ0F3SUJBZ0lKQVA5Y3FVME1Lc0F0TUEwR0NTcUdTSWIzRFFFQkN3VUFNSG94Q3pBSkJnTlYKQkFZVEFrZENNUlV3RXdZRFZRUUlEQXhDWldSbWIzSmtjMmhwY21VeERqQU1CZ05WQkFjTUJWTmhibVI1TVJJdwpFQVlEVlFRS0RBbE9SMGxPV0NCSmJtTXhFREFPQmdOVkJBc01CMU5CTFVWTlJVRXhIakFjQmdOVkJBTU1GVzFoCmNtc3VZbTlrWkdsdVozUnZiaTV1WjJsdWVEQWVGdzB4T1RBMU1qQXhPRFV3TkRoYUZ3MHpPVEExTVRVeE9EVXcKTkRoYU1Ib3hDekFKQmdOVkJBWVRBa2RDTVJVd0V3WURWUVFJREF4Q1pXUm1iM0prYzJocGNtVXhEakFNQmdOVgpCQWNNQlZOaGJtUjVNUkl3RUFZRFZRUUtEQWxPUjBsT1dDQkpibU14RURBT0JnTlZCQXNNQjFOQkxVVk5SVUV4CkhqQWNCZ05WQkFNTUZXMWhjbXN1WW05a1pHbHVaM1J2Ymk1dVoybHVlRENDQWlJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnSVBBRENDQWdvQ2dnSUJBTTZoakpmc2VOeU1JaUwybHY5WTIwaEk5ZTFOaTJYaEJFZjZGOGpqNHUyagp1SmZpblkzM2JraEdNa1BYN1hNNGxYQys2Q0luenZndTFqVVpaQk90YXFXcU9vWG5sdGpkbWorTzlBTEhMTktPCmJ1WmY5UEV0eEpzN3VabEliMjFZczFSd056eVROMXR5K0FqRkw4TmY5ZlYwVWR3dTNmbHA2OTJYSzYyTkxSdlUKNmFOckNmbEVZTnA2OUl1Y2ZJZjRta3JZZmVKeW1LenJleThqb2R1T2l2Z2VqS0RRTVlNRFpvdzhtL3JXV2RXOAp0V2pGTnhTUllKWXVMeFMxaE1hTzAzdzNqaERqNllwV0hJamhyQU9wQy9hYTA4alN3NmVIejUrSk5veHhtS3JrCmplZXpzTW5xSGNEbXo2aDFqRjdxbzJxdGNqNDlYWEJ2WDc5VkxYOUJMNVJySHhnSHhlR2J0WWVtVVMydW9MSkMKaEM0aktsTnBvV1M4RDZPKzdJam5IYVFEVVpsNFpTclhLcGZad2plZ3lxaFEvMEFaSm9UdXFDODVkUzZQL2xsRQpKcmlHSGMyL3ZmVnlZSnJ6cU45dUdiNkxWd2RMZ1dPMll2MHJRRHNJMWo1eEZFNWJCanNyZnhxY0g1ekRtajdSCllYZTVDOHpCVWNXcTZRWG1sQUo3ZnlHWnh6aC9ENlVxVGJESndZR1N4OHgyMGhOOCtqMlQ0RFRFcHpoM1dMMzcKY1dwRkxCZHdKcldjU3pHclA2MFdxTVROZG1DR2l3RHlzeXBxTE0wYmxYRFhvR3hCQ0Vvd25YVU50QVdMRjJXeApTbWE2NzRlMlRMS1JtMU1jZ0NlMmlPTDUvU3FxS21GOHdwZ3VrcUwwR2tDYmZ5UWtBRVUwcnB0dDd1eG1lS3AxCkFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCUXRuSDMybmdIQ2JmSzdmaUprdGx4TkRIT2M5VEFmQmdOVkhTTUUKR0RBV2dCUXRuSDMybmdIQ2JmSzdmaUprdGx4TkRIT2M5VEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElDQVFDSVpZVUs1SzNGcWV5NjFMUUtjT1k5Ry9Yc25JQTkwRngrRHpuSnU1OSsrckxxCnVwM0dOYlhTaDRtOHZOWnlJdVhwS1BBRmNXV2pGNVV0WngwU0VESC9VdVZjcnVOVmZVVHBuL3hkaHIweDFwYWIKSjJVMzRyYyt5UHh5bnREck94emJYQU9SZTQ2N2tPdGhDaGNORWNzRkFGU2NKaDZLWURFaDRncXJ1THl1cmUwYgpxOEQ2QUxUdEF1SEVLSzBzWk9WMldaZGJrRlNQenN1dzl6Q1FmRDFzV0xmREI4OHN1TzRvN2VLdlRXRUhXQ2EzClZad3FsdFo5YzFNS1VhM0lYY0hJcDZuMjhEcmgyZmpmaWppeU53bmtHTWZjNUtibzQzS0tPOXJiUmdYWUZHOWIKYkRHc053RGV1RnRlbWJCcVVYcVZ0NjdYQmhxUHdNK3oydmY4WVdOTHZtc0Fka3o3eEVJL3NqVEt2TGphcnp3UQpVM2NIdlhaVHdUdUd2VXR4ZEttdVFSd2dnY1VPNk1UZUFxMkd6d0VzU3ZINTFFR0FWTXA2Y09aOGRCcFNURldrClAyWHVCQ0t5TGFTVzFhVml4WUNrOE5vaDk4eFBLek5RV3E0VjFWeEpxUEVYV3FLMnJpQkdYOVc2cllIeVRhRWUKcjM1T1BmL1VkbHlLR1ZHUUpJUllxSzh6RE56L0VqOVdTTXBNQmlPeGFCcEZGY3J6SWJZWTd2UWgyeGQ5RUVkZQpHT3kyUzNRUlZBSU1KdzhheGJoM0c1Z3pkajU0L2RVeVgzOUlUVHdIUlFDTGxLYjJkVFpJSTU1M09OaituZHFJCmZraWZERnZvOHpQYy92SXhqaTR5M3MyV0ZXNEk1Rnc2VHBySTEvUi84R1dnTjJidlFOVlZXeUxZL1VhdUpnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "false"
    service.beta.openshift.io/serving-cert-secret-name: jaeger-collector-headless-tls
  creationTimestamp: null
  labels:
    app: jaeger
    app.kubernetes.io/component: service-collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-collector
    app.kubernetes.io/part-of: jaeger
  name: jaeger-collector-headless
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: http-zipkin
    port: 9411
    targetPort: 0
  - name: grpc-http
    port: 14250
    targetPort: 0
  - name: c-tchan-trft
    port: 14267
    targetPort: 0
  - name: http-c-binary-trft
    port: 14268
    targetPort: 0
  selector:
    app: jaeger
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: jaeger
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: jaeger
    app.kubernetes.io/component: service-collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-collector
    app.kubernetes.io/part-of: jaeger
  name: jaeger-collector
  namespace: monitoring
spec:
  ports:
  - name: http-zipkin
    port: 9411
    targetPort: 0
  - name: grpc-http
    port: 14250
    targetPort: 0
  - name: c-tchan-trft
    port: 14267
    targetPort: 0
  - name: http-c-binary-trft
    port: 14268
    targetPort: 0
  selector:
    app: jaeger
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: jaeger
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: jaeger
    app.kubernetes.io/component: service-query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-query
    app.kubernetes.io/part-of: jaeger
  name: jaeger-query
  namespace: monitoring
spec:
  ports:
  - name: http-query
    port: 16686
    targetPort: 16686
  - name: grpc-query
    port: 16685
    targetPort: 16685
  selector:
    app: jaeger
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: jaeger
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: jaeger
    app.kubernetes.io/component: service-agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger-agent
    app.kubernetes.io/part-of: jaeger
  name: jaeger-agent
  namespace: monitoring
spec:
  clusterIP: None
  ports:
  - name: zk-compact-trft
    port: 5775
    protocol: UDP
    targetPort: 0
  - name: config-rest
    port: 5778
    targetPort: 0
  - name: jg-compact-trft
    port: 6831
    protocol: UDP
    targetPort: 0
  - name: jg-binary-trft
    port: 6832
    protocol: UDP
    targetPort: 0
  selector:
    app: jaeger
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: jaeger
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/inject: disabled
    prometheus.io/port: "14269"
    prometheus.io/scrape: "true"
    sidecar.istio.io/inject: "false"
  creationTimestamp: null
  labels:
    app: jaeger
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: jaeger
  name: jaeger
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/component: all-in-one
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/part-of: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        linkerd.io/inject: disabled
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        app: jaeger
        app.kubernetes.io/component: all-in-one
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/managed-by: jaeger-operator
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/part-of: jaeger
    spec:
      containers:
      - args:
        - --collector.grpc.tls.cert=/etc/ssl/jaeger-certs/jaeger.crt
        - --collector.grpc.tls.enabled=true
        - --collector.grpc.tls.key=/etc/ssl/jaeger-certs/jaeger.key
        - --log-level=debug
        - --memory.max-traces=100000
        - --query.base-path=/jaeger
        - --query.ui-config=/etc/config/ui.json
        - --reporter.grpc.tls.ca=/etc/ssl/jaeger-certs/ca.crt
        - --reporter.grpc.tls.enabled=true
        - --reporter.grpc.tls.skip-host-verify=true
        - --sampling.strategies-file=/etc/jaeger/sampling/sampling.json
        env:
        - name: SPAN_STORAGE_TYPE
          value: memory
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: JAEGER_DISABLED
          value: "false"
        image: jaegertracing/all-in-one:1.36.0
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 5
          periodSeconds: 15
        name: jaeger
        ports:
        - containerPort: 5775
          name: zk-compact-trft
          protocol: UDP
        - containerPort: 5778
          name: config-rest
        - containerPort: 6831
          name: jg-compact-trft
          protocol: UDP
        - containerPort: 6832
          name: jg-binary-trft
          protocol: UDP
        - containerPort: 9411
          name: zipkin
        - containerPort: 14267
          name: c-tchan-trft
        - containerPort: 14268
          name: c-binary-trft
        - containerPort: 16686
          name: query
        - containerPort: 14269
          name: admin-http
        - containerPort: 14250
          name: grpc
        readinessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 1
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssl/jaeger-certs
          name: jaeger-secret-vol
          readOnly: true
        - mountPath: /etc/config
          name: jaeger-ui-configuration-volume
          readOnly: true
        - mountPath: /etc/jaeger/sampling
          name: jaeger-sampling-configuration-volume
          readOnly: true
      enableServiceLinks: false
      serviceAccountName: jaeger
      volumes:
      - name: jaeger-secret-vol
        secret:
          items:
          - key: tls.crt
            path: jaeger.crt
          - key: tls.key
            path: jaeger.key
          - key: ca.crt
            path: ca.crt
          secretName: jaeger-secret
      - configMap:
          items:
          - key: ui
            path: ui.json
          name: jaeger-ui-configuration
        name: jaeger-ui-configuration-volume
      - configMap:
          items:
          - key: sampling
            path: sampling.json
          name: jaeger-sampling-configuration
        name: jaeger-sampling-configuration-volume
status: {}


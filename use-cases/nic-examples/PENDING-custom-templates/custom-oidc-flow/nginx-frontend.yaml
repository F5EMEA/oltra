apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-frontend-config
data:
  default.conf: |
    server {
        listen       80 default_server;
        server_name  localhost;
    
        #access_log  /var/log/nginx/host.access.log  main;
    
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /protected {
            add_header x_username $http_username always;
            add_header x_protected "true" always;
            root   /usr/share/nginx/html;
            if ( $http_username = "" ) {
                return 401;
            }
            default_type text/plain;
            return 200 "Welcome to /protected $http_username\nToken: $http_jwtToken\n";
        }
    
        error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-frontend
  template:
    metadata:
      labels:
        app: nginx-frontend
    spec:
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-frontend-config
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - name: http
          containerPort: 80
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-frontend
spec:
  #externalTrafficPolicy: Local
  selector:
    app: nginx-frontend
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
      nodePort: 31080

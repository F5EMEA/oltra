kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
  namespace: nginx
data:
  allow-snippet-annotations: 'true'
  worker-connections: "10000"
  worker-rlimit-nofile: "10240"
  keepalive: "100"
  keepalive-requests: "100000000"
#  proxy-protocol: "True"
#  real-ip-header: "proxy_protocol"
#  set-real-ip-from: "0.0.0.0/0"

  http-snippets: | # No default. Pipe is used for multiple line snippets.
    log_format logger-json escape=json '{"source": "nginx", "time": $msec, "resp_body_size": $body_bytes_sent, "host": "$http_host", "address": "$remote_addr", "request_length": $request_length, "method": "$request_method", "uri": "$request_uri", "status": $status,  "user_agent": "$http_user_agent", "resp_time": $request_time, "upstream_addr": "$upstream_addr", "app_protect_outcome_reason": "$app_protect_outcome_reason", "app_protect_policy_name": "$app_protect_policy_name", "app_protect_support_id": "$app_protect_support_id", "resource_name": "$resource_name", "resource_namespace": "$resource_namespace", "service": "$service", "resource_type": "$resource_type"}';
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    set_real_ip_from 0.0.0.0/0;
    map $status $logme {
    ~^[23]  1;
    default 1;
    }
    map $request_time $logme {
    ~^0.[0-2][0-9][0-9] 1;
    default 1;
    }    
    access_log syslog:server=fluentd-svc.fluentd:8514 logger-json if=$logme;